<!--
  Auteur : Guillaume Le Blanc
  Date : 2018-10-18
  Fichier : ListBoxStyles.xaml
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="MaterialSelection" TargetType="{x:Type ListBox}">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ListBoxItem}">
          <Setter Property="OverridesDefaultStyle" Value="True" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
          <Setter Property="Margin" Value="5" />
          <Setter Property="Height" Value="100" />
          <Setter Property="Width" Value="150" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListBoxItem}">
                <Border x:Name="Border" SnapsToDevicePixels="True" BorderThickness="2" CornerRadius="2" BorderBrush="DarkSlateGray"
                    Background="LightBlue">
                  <DockPanel>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Height="90"
                        Width="140" Canvas.Bottom="0" Canvas.Left="0" Canvas.Right="0" Panel.ZIndex="0">
                      <ContentPresenter.Style>
                        <Style>
                          <Style.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                              <Setter Property="Foreground" Value="DarkCyan" />
                              <Setter Property="FontSize" Value="25" />
                              <Setter Property="TextAlignment" Value="Center" />
                              <Setter Property="HorizontalAlignment" Value="Stretch" />
                              <Setter Property="DockPanel.Dock" Value="Bottom" />
                            </Style>
                            <Style x:Name="MaterialColor" TargetType="{x:Type Rectangle}">
                              <Setter Property="MinHeight" Value="40" />
                              <Setter Property="MinWidth" Value="80" />
                              <Setter Property="VerticalAlignment" Value="Top" />
                              <Setter Property="HorizontalAlignment" Value="Center" />
                              <Setter Property="DockPanel.Dock" Value="Top" />
                            </Style>
                          </Style.Resources>
                        </Style>
                      </ContentPresenter.Style>
                    </ContentPresenter>
                  </DockPanel>
                </Border>
                <ControlTemplate.Triggers>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Border" Value="Red" Property="BorderBrush" />
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Selector.IsSelectionActive" Value="False" />
                      <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Border" Value="Red" Property="BorderBrush" />
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="Selector.IsSelectionActive" Value="True" />
                      <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Border" Value="Red" Property="BorderBrush" />
                  </MultiTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>